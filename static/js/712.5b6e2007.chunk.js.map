{"version":3,"file":"static/js/712.5b6e2007.chunk.js","mappings":"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","sources":["components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesList.jsx","components/Searchbar/Searchbar.styled.jsx","components/Searchbar/Searchbar.jsx","pages/Movies.jsx","services/movieAPI.js"],"sourcesContent":["import styled from \"@emotion/styled\";\nimport { Link } from \"react-router-dom\";\n\nexport const StyledList = styled.ul`\n    display: flex;\n    flex-wrap: wrap;\n    gap: 35px;\n    justify-content: center;\n    margin-top: 20px;\n`;\n\nexport const StyledLink = styled(Link)`\n    transition: color 250ms cubic-bezier(0.65, 0.05, 0.36, 1);\n\n    &:hover,\n    &:focus {\n    color: brown;\n    }\n`;\n\nexport const MovieName = styled.p`\n    padding: 10px;\n    font-weight: 500;\n`;\n\nexport const StyledItem = styled.li`\n    background-color: #fde2f3;\n    border-radius: 7px;\n    overflow: hidden;\n    width: 300px;\n\n    transition: transform 250ms cubic-bezier(0.65, 0.05, 0.36, 1);\n\n    &:hover,\n    &:focus {\n    transform: scale(1.02);\n    }\n`;\n\nexport const StyledImg = styled.img`\n    object-fit: cover;\n    min-height: 450px;\n`;","import { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport {\n  StyledList,\n  StyledLink,\n  MovieName,\n  StyledItem,\n  StyledImg,\n} from './MoviesList.styled';\n\nconst MoviesList = ({ movieItems }) => {\n  const location = useLocation();\n\n  const chooseURL = id => {\n    return location.pathname === '/movies' ? `${id}` : `movies/${id}`;\n  };\n\n  return (\n    <StyledList>\n      {movieItems.map(({ poster_path, id, title }) => {\n        return (\n          <StyledItem key={id}>\n            <StyledLink to={chooseURL(id)} state={{ from: location }}>\n              <StyledImg\n                width=\"300px\"\n                src={\n                  poster_path\n                    ? `https://image.tmdb.org/t/p/w500${poster_path}`\n                    : `https://placehold.jp/300x450.png`\n                }\n                alt=\"\"\n              />\n              <MovieName>{title}</MovieName>\n            </StyledLink>\n          </StyledItem>\n        );\n      })}\n    </StyledList>\n  );\n};\n\nMoviesList.propTypes = {\n  movieItems: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      poster_path: PropTypes.string,\n    }).isRequired\n  ).isRequired,\n};\n\nexport default MoviesList;\n","import styled from \"@emotion/styled\";\nimport { Form, Field } from \"formik\";\n\nexport const StyledForm = styled(Form)`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n`;\n\nexport const StyledField = styled(Field)`\n    height: 35px;\n    border: 1px solid #e5beec;\n    outline: none;\n    min-width: 220px;\n\n    border-top-left-radius: 5px;\n    border-bottom-left-radius: 5px;\n    font-size: 16px;\n    padding: 2px 7px;\n\n    transition: border-color 350ms cubic-bezier(0.65, 0.05, 0.36, 1);\n\n    &:focus{\n    border-color: #2a2f4f;\n    }\n`;\n\nexport const Button = styled.button`\n    display: inline-flex;\n    align-items: center;\n    justify-content: center;\n    column-gap: 5px;\n    min-width: 100px;\n    height: 36px;\n    padding: 8px 10px;\n\n    border-top-right-radius: 5px;\n    border-bottom-right-radius: 5px;\n    border: none;\n    cursor: pointer;\n\n    font-size: 16px;\n    font-weight: 600;\n    background-color: #e5beec;\n\n    transition: background-color 350ms cubic-bezier(0.65, 0.05, 0.36, 1),\n    color 350ms cubic-bezier(0.65, 0.05, 0.36, 1);\n\n    &:hover{\n        background-color: #2a2f4f;\n        color: orangered;\n        }\n`;","import { useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { Formik, ErrorMessage } from 'formik';\nimport PropTypes from 'prop-types';\nimport { Button, StyledField, StyledForm } from './Searchbar.styled';\n\nconst Searchbar = ({ onQueryChange }) => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const movieName = searchParams.get('query') ?? '';\n\n  useEffect(() => {\n    if (!movieName) return;\n    onQueryChange(movieName);\n  }, [movieName, onQueryChange]);\n\n  const handleSearchSubmit = (values, action) => {\n    const query = values.query;\n    const nextParams = query !== '' ? { query } : {};\n    setSearchParams(nextParams);\n\n    action.resetForm();\n  };\n\n  return (\n    <Formik initialValues={{ query: '' }} onSubmit={handleSearchSubmit}>\n      <StyledForm>\n        <StyledField\n          type=\"text\"\n          name=\"query\"\n          title=\"Please enter movie name.\"\n          placeholder=\"Movie name\"\n          required\n        />\n        <ErrorMessage name=\"name\" component=\"div\" />\n        <Button type=\"submit\">Search</Button>\n      </StyledForm>\n    </Formik>\n  );\n};\n\nSearchbar.propTypes = {\n  onQueryChange: PropTypes.func.isRequired,\n};\n\nexport default Searchbar;\n","\nimport { useEffect, useRef, useState } from \"react\";\nimport { getMoviesByQuery } from \"services/movieAPI\";\nimport Searchbar from \"components/Searchbar/Searchbar\";\nimport MoviesList from 'components/MoviesList/MoviesList';\nimport Loader from 'components/Loader/Loader';\n\nconst Movies = () => {\n    const [movies, setMovies] = useState([]);\n    const [isLoading, setIsLoading] = useState(false);\n    const [query, setQuery] = useState('');\n    const [error, setError] = useState(null);\n    const abortCtrl = useRef();\n\n    useEffect(() => {\n        if (query === '') {\n            return;\n        }\n\n        const getMovieInfo = async () => {\n            if (abortCtrl.current) {\n                abortCtrl.current.abort();\n              }\n        \n              abortCtrl.current = new AbortController();\n        \n              try {\n                setIsLoading(true);\n                setError(null);\n             \n                const movies = await getMoviesByQuery(query, abortCtrl.current.signal);\n\n                setMovies(movies);\n                setError(null);\n            } catch (error){\n                if (error.code !== 'ERR_CANCELED') {\n                    setError(error.message);\n                  }\n              } finally{\n                setIsLoading(false);\n              }\n        };\n        getMovieInfo();\n        }, [query]);\n\n        const onQueryChange = searchQuery => {\n            if (searchQuery === query){\n                return;\n            }\n            setQuery(searchQuery);\n            setError(null);\n        };\n\n        return (\n            <>\n            <Searchbar onQueryChange={onQueryChange} />\n\n            {isLoading && <Loader />}\n            {error && <p>{error}</p> }\n\n            {!isLoading && movies.length > 0 && <MoviesList movieItem={movies}/>}\n            </>\n        );\n};\n\nexport default Movies;\n\n","import axios from 'axios';\n\nconst API_KEY = '37a520d43e9c95df130da7fe0dcee2e8';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const getTrending = async signal => {\n  const response = await axios.get('trending/movie/day', {\n    signal,\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n    },\n  });\n  return response.data.results;\n};\n\nexport const getMoviesByQuery = async (query, signal) => {\n  const response = await axios.get('search/movie', {\n    signal,\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n      query,\n      include_adult: false,\n      page: 1,\n    },\n  });\n\n  return response.data.results;\n};\n\nexport const getMovieDetails = async (movieId, signal) => {\n  const response = await axios.get(`movie/${movieId}`, {\n    signal,\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n    },\n  });\n  return response.data;\n};\n\nexport const getCast = async (movieId, signal) => {\n  const response = await axios.get(`movie/${movieId}/credits`, {\n    signal,\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n    },\n  });\n  return response.data.cats;\n};\n\nexport const getReviews = async (movieId, signal) => {\n  const response = await axios.get(`movie/${movieId}/reviews`, {\n    signal,\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n      page: 1,\n    },\n  });\n  return response.data.results;\n};\n"],"names":["StyledList","styled","StyledLink","Link","MovieName","StyledItem","StyledImg","movieItems","location","useLocation","chooseURL","id","pathname","map","poster_path","title","to","state","from","width","src","alt","StyledForm","Form","StyledField","Field","Button","onQueryChange","useSearchParams","searchParams","setSearchParams","movieName","get","useEffect","initialValues","query","onSubmit","values","action","resetForm","type","name","placeholder","required","component","useState","movies","setMovies","isLoading","setIsLoading","setQuery","error","setError","abortCtrl","useRef","getMovieInfo","current","abort","AbortController","getMoviesByQuery","signal","code","message","searchQuery","Loader","length","MoviesList","movieItem","API_KEY","axios","getTrending","params","api_key","language","response","data","results","include_adult","page","getMovieDetails","movieId","getCast","cats","getReviews"],"sourceRoot":""}