{"version":3,"file":"static/js/387.dacfb695.chunk.js","mappings":"kSAEaA,EAAcC,EAAAA,EAAAA,GAAH,iDAIXC,EAAaD,EAAAA,EAAAA,EAAH,+CAIVE,EAAcF,EAAAA,EAAAA,GAAH,sGAMXG,EAAcH,EAAAA,EAAAA,GAAH,6F,SCwDxB,EA7DgB,WACZ,IAAQI,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KACMC,GAAYC,EAAAA,EAAAA,UA6BlB,OA3BAC,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAa,mCAAG,2FACdH,EAAUI,SACVJ,EAAUI,QAAQC,QAGpBL,EAAUI,QAAU,IAAIE,gBALR,SAQdT,GAAa,GACbE,EAAS,MATK,UAWYQ,EAAAA,EAAAA,IAAWhB,EAASS,EAAUI,QAAQI,QAXlD,OAWRC,EAXQ,OAadd,EAAWc,GACXV,EAAS,MAdK,kDAgBK,iBAAf,KAAMW,MACNX,EAAS,KAAMY,SAjBL,yBAoBdd,GAAa,GApBC,6EAAH,qDAuBtBM,GACA,GAAE,CAACZ,KAGA,gCAECK,IAAa,SAACgB,EAAA,EAAD,IACbd,IAAS,uBAAIA,KAEZF,GAAaF,EAAQmB,OAAS,IAC5B,0BACI,SAACvB,EAAD,UACKI,EAAQoB,KAAI,gBAAEC,EAAF,EAAEA,GAAIC,EAAN,EAAMA,OAAQC,EAAd,EAAcA,QAAd,OACT,UAAC5B,EAAD,YACI,UAACH,EAAD,WAAa,WAAS8B,MACtB,SAAC5B,EAAD,UAAa6B,MAFCF,EADT,SAUvBnB,GAAgC,IAAnBF,EAAQmB,SACnB,yBAAK,sDAKhB,C,mMCpEKK,EAAU,mCAChBC,EAAAA,EAAAA,SAAAA,QAAyB,gCAElB,IAAMC,EAAW,mCAAG,WAAMZ,GAAN,uFACFW,EAAAA,EAAAA,IAAU,qBAAsB,CACrDX,OAAAA,EACAa,OAAQ,CACNC,QAASJ,EACTK,SAAU,WALW,cACnBC,EADmB,yBAQlBA,EAASC,KAAKC,SARI,2CAAH,sDAWXC,EAAgB,mCAAG,WAAOC,EAAOpB,GAAd,uFACPW,EAAAA,EAAAA,IAAU,eAAgB,CAC/CX,OAAAA,EACAa,OAAQ,CACNC,QAASJ,EACTK,SAAU,QACVK,MAAAA,EACAC,eAAe,EACfC,KAAM,KARoB,cACxBN,EADwB,yBAYvBA,EAASC,KAAKC,SAZS,2CAAH,wDAehBK,EAAe,mCAAG,WAAOxC,EAASiB,GAAhB,uFACNW,EAAAA,EAAAA,IAAA,gBAAmB5B,GAAW,CACnDiB,OAAAA,EACAa,OAAQ,CACNC,QAASJ,EACTK,SAAU,WALe,cACvBC,EADuB,yBAQtBA,EAASC,MARa,2CAAH,wDAWfO,EAAO,mCAAG,WAAOzC,EAASiB,GAAhB,uFACEW,EAAAA,EAAAA,IAAA,gBAAmB5B,EAAnB,YAAsC,CAC3DiB,OAAAA,EACAa,OAAQ,CACNC,QAASJ,EACTK,SAAU,WALO,cACfC,EADe,yBAQdA,EAASC,KAAKQ,MARA,2CAAH,wDAWP1B,EAAU,mCAAG,WAAOhB,EAASiB,GAAhB,uFACDW,EAAAA,EAAAA,IAAA,gBAAmB5B,EAAnB,YAAsC,CAC3DiB,OAAAA,EACAa,OAAQ,CACNC,QAASJ,EACTK,SAAU,QACVO,KAAM,KANc,cAClBN,EADkB,yBASjBA,EAASC,KAAKC,SATG,2CAAH,uD","sources":["components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx","services/movieAPI.js"],"sourcesContent":["import styled from \"@emotion/styled\";\n\nexport const AuthorTitle = styled.h2`\n    margin-bottom: 5px;\n`;\n\nexport const ReviewText = styled.p`\n    line-height: 1.3;\n`;\n\nexport const ReviewsItem = styled.li`\n    padding: 10px;\n    background-color: #fde2f3;\n    border-radius: 10px;\n`;\n\nexport const ReviewsList = styled.ul`\n    display: flex;\n    flex-direction: column;\n    row-gap: 15px;\n`;","import Loader from \"components/Loader/Loader\";\nimport { useEffect, useState, useRef } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { getReviews } from \"services/movieAPI\";\nimport {\n    AuthorTitle,\n    ReviewText,\n    ReviewsItem,\n    ReviewsList,\n} from './Reviews.styled';\n\nconst Reviews = () => {\n    const { movieId } = useParams();\n    const [reviews, setReviews] = useState([]);\n    const [isLoading, setIsLoading] = useState(false);\n    const [error, setError] = useState(null);\n    const abortCtrl = useRef();\n\n    useEffect(() => {\n        const getReviewInfo = async () => {\n            if (abortCtrl.current) {\n                abortCtrl.current.abort();\n              }\n        \n              abortCtrl.current = new AbortController();\n        \n              try {\n                setIsLoading(true);\n                setError(null);\n\n                const reviewsInfo = await getReviews(movieId, abortCtrl.current.signal);\n\n                setReviews(reviewsInfo);\n                setError(null);         \n            } catch (error) {\n                if (error.code !== 'ERR_CANCELED') {\n                    setError(error.message);\n                  }\n            } finally {\n                setIsLoading(false);\n            }\n        };\n     getReviewInfo();\n    }, [movieId]);\n\n    return (\n        <>\n\n        {isLoading && <Loader />}\n        {error && <p>{error}</p>}\n\n        {!isLoading && reviews.length > 0 && (\n            <div>\n                <ReviewsList>\n                    {reviews.map(({id, author, content}) => (\n                        <ReviewsItem key={id}>\n                            <AuthorTitle>Author: {author}</AuthorTitle>\n                            <ReviewText>{content}</ReviewText>\n                        </ReviewsItem>\n                    ))}\n                </ReviewsList>\n            </div>\n        )}\n\n        {!isLoading && reviews.length === 0 && (\n            <div>Sorry, there are no reviews for this movie yet.</div>\n        )}\n\n        </>\n    );\n};\n\nexport default Reviews;","import axios from 'axios';\n\nconst API_KEY = '37a520d43e9c95df130da7fe0dcee2e8';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const getTrending = async signal => {\n  const response = await axios.get('trending/movie/day', {\n    signal,\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n    },\n  });\n  return response.data.results;\n};\n\nexport const getMoviesByQuery = async (query, signal) => {\n  const response = await axios.get('search/movie', {\n    signal,\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n      query,\n      include_adult: false,\n      page: 1,\n    },\n  });\n\n  return response.data.results;\n};\n\nexport const getMovieDetails = async (movieId, signal) => {\n  const response = await axios.get(`movie/${movieId}`, {\n    signal,\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n    },\n  });\n  return response.data;\n};\n\nexport const getCast = async (movieId, signal) => {\n  const response = await axios.get(`movie/${movieId}/credits`, {\n    signal,\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n    },\n  });\n  return response.data.cast;\n};\n\nexport const getReviews = async (movieId, signal) => {\n  const response = await axios.get(`movie/${movieId}/reviews`, {\n    signal,\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n      page: 1,\n    },\n  });\n  return response.data.results;\n};\n"],"names":["AuthorTitle","styled","ReviewText","ReviewsItem","ReviewsList","movieId","useParams","useState","reviews","setReviews","isLoading","setIsLoading","error","setError","abortCtrl","useRef","useEffect","getReviewInfo","current","abort","AbortController","getReviews","signal","reviewsInfo","code","message","Loader","length","map","id","author","content","API_KEY","axios","getTrending","params","api_key","language","response","data","results","getMoviesByQuery","query","include_adult","page","getMovieDetails","getCast","cast"],"sourceRoot":""}